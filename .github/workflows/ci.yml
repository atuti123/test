name: CICD

on:
  workflow_dispatch:
    inputs:
      msName:
        type: choice
        required: true
        description: microservice to deploy
        options: 
        - odd
        - even

jobs:
  build:
    name: Build And Push Docker Image
    runs-on: ubuntu-latest
    outputs:
      imageTag: ${{ steps.imageTag.outputs.tag }}
    steps:
      - name: variable
        run: |
           echo "${{ github.event.inputs.msName }}"
      - name: Checkout
        uses: actions/checkout@v4
      - name: Set up QEMU
        uses: docker/setup-qemu-action@v3
      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3
      - name: Build and push
        uses: docker/build-push-action@v5
        with:
          context: microservices/
          platforms: linux/amd64,linux/arm64
          push: true
          tags: ttl.sh/ms:${{ github.ref_name }}.${{ github.sha }}
      - id: imageTag
        run: echo "tag=ttl.sh/ms:${{ github.ref_name }}.${{ github.sha }}" >> "$GITHUB_OUTPUT"

  release:
    permissions:
      contents: write
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v4
        with:
          fetch-depth: 0
      - name: Configure Git
        run: |
          git config user.name "$GITHUB_ACTOR"
          git config user.email "$GITHUB_ACTOR@users.noreply.github.com"
      - name: Install Helm
        uses: azure/setup-helm@v3
      - name: Run chart-releaser
        uses: helm/chart-releaser-action@v1.6.0
        with:
          charts_dir: microservices/charts
        env:
          CR_TOKEN: "${{ secrets.GITHUB_TOKEN }}"
      
  deploy:
    if: ${{ false }}
    name: Deploy to EC2
    runs-on: ubuntu-latest
    needs: [build]
    steps:
      - uses: actions/checkout@v4
      - name: Deploy
        env:
            PRIVATE_KEY: ${{ secrets.SSH_PRIVATE_KEY }}
            HOSTNAME: ${{secrets.SSH_HOST}}
            USER_NAME: ${{secrets.USER_NAME}}
        run: |
          echo "$PRIVATE_KEY" > private_key && chmod 600 private_key
          ssh -o StrictHostKeyChecking=no -i private_key ${USER_NAME}@${HOSTNAME} '
              helm repo add roy https://royta1.github.io/test
              helm repo update
              temp_folder=$(mktemp -d) && cd $temp_folder
              helm pull roy/get-url --untar
              helm upgrade -i ${{ github.event.inputs.msName }} get-url \
              -f get-url/configs/${{ github.event.inputs.msName }}.yaml \
              --set image.tag=${{needs.build.outputs.imageTag}} \
              --set fullnameOverride=${{ github.event.inputs.msName }}
              rm -f $temp_folder
              '